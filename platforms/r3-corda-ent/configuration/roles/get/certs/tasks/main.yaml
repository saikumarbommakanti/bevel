##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################
# Get the cenm certs from network-service org
- name: Get cenm cert from current org
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubernetes.config_file }}"
    kind: Secret
    name: "cenm-certs"
    namespace: "{{ component_ns }}"
  register: cenm_data

# Get the doorman cert from network-service org
- name: Get doorman cert from current org
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubernetes.config_file }}"
    kind: Secret
    name: "doorman-tls-certs"
    namespace: "{{ component_ns }}"
  register: doorman_data

# Get the networkmap cert from network-service org
- name: Get nms cert from current org
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubernetes.config_file }}"
    kind: Secret
    name: "nms-tls-certs"
    namespace: "{{ component_ns }}"
  register: nms_data

- name: Save certs locally for secondary init
  shell: |
    echo {{ cenm_data.resources[0].data['network-root-truststore.jks'] }} > {{ files_loc }}/network-root-truststore.jks
    echo {{ doorman_data.resources[0].data['tls.crt'] }} > {{ files_loc }}/doorman.crt
    echo {{ nms_data.resources[0].data['tls.crt'] }} > {{ files_loc }}/nms.crt
  vars:
    files_loc: "{{playbook_dir}}/../../../{{ charts_dir }}/enterprise-node/build"

- name: Create cenm-certs Secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cenm-certs
        namespace: manufacturer-ent
      data:
        network-root-truststore.jks: "{{ lookup('file', './enterprise-node/build/network-root-truststore.jks') }}"

- name: Create doorman-tls-certs Secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: doorman-tls-certs
        namespace: manufacturer-ent
      data:
        tls.crt: "{{ lookup('file', './enterprise-node/build/doorman/tls.crt') }}"

- name: Create nms-tls-certs Secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: nms-tls-certs
        namespace: manufacturer-ent
      data:
        tls.crt: "{{ lookup('file', './enterprise-node/build/nms/tls.crt') }}"