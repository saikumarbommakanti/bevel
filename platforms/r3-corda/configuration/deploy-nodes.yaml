##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#########################
# Playbook to create deployment files for namespaces, service account and clusterrolebinding
# Playbook arguments: complete network.yaml
#########################
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:      
  # Wait for network services to respond  
  - name: Check that network services uri are reachable
    uri:
      url: "{{ item.uri }}"
      validate_certs: no
    register: this
    until: this.status == 200 or this.status == 401
    loop: "{{ network['network_services'] }}"
    retries: "{{ network.env.retry_count}}"
    delay: 70
    ignore_errors: yes
    when: network.env.proxy != 'none'

  # Deploy notaries
  - name: Deploy notary service
    include_role:
      name: setup/notary
    vars:
      name: "{{ org.name | lower }}"
      node: "{{ org.services.notary }}"
      component_ns: "{{ org.name | lower }}-ns"
      kubernetes: "{{ org.k8s }}"
      vault: "{{ org.vault }}"
      gitops: "{{ org.gitops }}"
      charts_dir: "{{ org.gitops.chart_source }}"
      values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ component_ns }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: org
    when: 
      - org.services.notary is defined
      - org.org_status is not defined or org.org_status == 'new'

  # Deploy all other nodes
  - name: Deploy Corda nodes
    include_role:
      name: setup/node
    vars:
      name: "{{ org.name | lower }}"
      component_ns: "{{ org.name | lower }}-ns"
      kubernetes: "{{ org.k8s }}"
      vault: "{{ org.vault }}"
      gitops: "{{ org.gitops }}"
      charts_dir: "{{ org.gitops.chart_source }}"
      values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ component_ns }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
      loop_var: org
    when: 
      - org.type == 'node'
      - org.org_status is not defined or org.org_status == 'new'

  # delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent
